# Generated by Django 4.2.7 on 2023-11-08 11:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SafetyIndicator",
            fields=[
                (
                    "si_id",
                    models.IntegerField(
                        db_comment="安全指标ID", primary_key=True, serialize=False
                    ),
                ),
                ("si_category", models.CharField(db_comment="指标分类", max_length=30)),
                ("si_name", models.CharField(db_comment="安全指标名称", max_length=30)),
                ("si_state", models.IntegerField(db_comment="安全指标状态")),
                ("si_creator", models.CharField(db_comment="安全指标创建人", max_length=30)),
                ("si_create_time", models.DateTimeField(db_comment="安全指标创建时间")),
            ],
            options={"db_table": "safety_indicator", "managed": True,},
        ),
        migrations.CreateModel(
            name="Scene",
            fields=[
                (
                    "scene_id",
                    models.IntegerField(
                        db_comment="场景ID", primary_key=True, serialize=False
                    ),
                ),
                ("scene_name", models.CharField(db_comment="场景名称", max_length=30)),
                ("scene_state", models.IntegerField(db_comment="场景状态")),
                (
                    "scene_description",
                    models.CharField(db_comment="场景描述", max_length=200),
                ),
                ("scene_creator", models.CharField(db_comment="场景创建人", max_length=30)),
                ("scene_create_time", models.DateTimeField(db_comment="场景创建时间")),
            ],
            options={"db_table": "scene", "managed": True,},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.IntegerField(
                        db_comment="用户ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "user_account",
                    models.CharField(db_comment="用户账号", max_length=30, unique=True),
                ),
                ("user_password", models.CharField(db_comment="用户密码", max_length=30)),
                (
                    "user_name",
                    models.CharField(db_comment="用户账号", max_length=20, unique=True),
                ),
                ("user_authority", models.IntegerField(db_comment="用户权限")),
                (
                    "user_email",
                    models.CharField(
                        blank=True, db_comment="用户邮箱", max_length=30, null=True
                    ),
                ),
                (
                    "user_phone",
                    models.IntegerField(blank=True, db_comment="用户电话号码", null=True),
                ),
            ],
            options={"db_table": "user", "managed": True,},
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "task_id",
                    models.IntegerField(
                        db_comment="任务ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "task_name",
                    models.CharField(db_comment="任务名称", max_length=30, unique=True),
                ),
                ("task_state", models.IntegerField(db_comment="任务状态")),
                ("task_create_time", models.DateTimeField(db_comment="任务创建时间")),
                (
                    "product_name",
                    models.CharField(db_comment="产品名称", max_length=20, unique=True),
                ),
                (
                    "product_version",
                    models.CharField(
                        blank=True, db_comment="产品版本号", max_length=20, null=True
                    ),
                ),
                (
                    "product_description",
                    models.CharField(
                        blank=True, db_comment="产品描述", max_length=200, null=True
                    ),
                ),
                (
                    "product_td",
                    models.TextField(
                        blank=True,
                        db_column="product_TD",
                        db_comment="产品拓扑图",
                        null=True,
                    ),
                ),
                (
                    "product_ad",
                    models.TextField(
                        blank=True,
                        db_column="product_AD",
                        db_comment="产品架构图",
                        null=True,
                    ),
                ),
                (
                    "app_ip",
                    models.PositiveIntegerField(
                        blank=True, db_column="app_IP", db_comment="应用IP", null=True
                    ),
                ),
                (
                    "app_domain_name",
                    models.CharField(
                        blank=True, db_comment="应用域名", max_length=200, null=True
                    ),
                ),
                (
                    "app_starting_url",
                    models.CharField(
                        blank=True,
                        db_column="app_starting_URL",
                        db_comment="起始URL",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "app_port",
                    models.IntegerField(blank=True, db_comment="应用端口", null=True),
                ),
                (
                    "app_name",
                    models.CharField(
                        blank=True, db_comment="应用名称", max_length=30, null=True
                    ),
                ),
                (
                    "app_os_version",
                    models.CharField(
                        blank=True, db_comment="操作系统版本", max_length=30, null=True
                    ),
                ),
                (
                    "scene",
                    models.ForeignKey(
                        db_comment="应用场景（场景ID）",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="news.scene",
                    ),
                ),
                (
                    "task_creator",
                    models.ForeignKey(
                        db_column="task_creator",
                        db_comment="任务创建人（用户ID）",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="news.user",
                    ),
                ),
            ],
            options={"db_table": "task", "managed": True,},
        ),
        migrations.CreateModel(
            name="TaskSi",
            fields=[
                (
                    "task",
                    models.OneToOneField(
                        db_comment="任务ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="news.task",
                    ),
                ),
                (
                    "si",
                    models.ForeignKey(
                        db_comment="安全指标ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="news.safetyindicator",
                    ),
                ),
            ],
            options={
                "db_table": "task_si",
                "managed": True,
                "unique_together": {("task", "si")},
            },
        ),
        migrations.CreateModel(
            name="TaskOperation",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        db_comment="用户ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="news.user",
                    ),
                ),
                ("task_operate_time", models.DateTimeField(db_comment="最后操作时间")),
                (
                    "task",
                    models.ForeignKey(
                        db_comment="任务ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="news.task",
                    ),
                ),
            ],
            options={
                "db_table": "task_operation",
                "managed": True,
                "unique_together": {("user", "task")},
            },
        ),
        migrations.CreateModel(
            name="TaskEvaluation",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        db_comment="用户ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="news.user",
                    ),
                ),
                ("task_evaluate_time", models.DateTimeField(db_comment="评审时间")),
                (
                    "task",
                    models.ForeignKey(
                        db_comment="任务ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="news.task",
                    ),
                ),
            ],
            options={
                "db_table": "task_evaluation",
                "managed": True,
                "unique_together": {("user", "task")},
            },
        ),
    ]
